@page
@model CafeMVC.Web.Areas.Identity.Pages.Account.Manage.AddressModel
@{
}
<div class="address-container">
    <div class="add-address-container">
        <button class="btn btn-primary add-address-button" data-id="@Model.CustomerId" id="add-address-button">
            Add New Address
        </button>
    </div>
    <div class="table-container">
        <table id="address-table">
            <thead>
                <tr>
                    <th>No.</th>
                    <th>Address Type</th>
                    <th>Full Address</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.Addresses.Count; i++)
                {
                    int y = i + 1;
                    <tr>
                        <td>@y</td>
                        <td>@Model.Addresses[i].Type</td>
                        <td>@Model.Addresses[i].Address</td>
                        <td class="button-row">
                            <div class="btn-container">
                                <button type="button" class="btn btn-secondary edit-address-button" data-id="@Model.Addresses[i].Id">Edit</button>
                                <button type="button" class="btn btn-danger delete-address-button" data-id="@Model.Addresses[i].Id">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
<div id="address-form-container"></div>

@section Scripts{
    <script src="~/js/CustomerInfo.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {
            
            $('.edit-address-button').click(function () {
                var addressId = $(this).data('id');
                var url = '@Url.Action("ChangeAddress", "Customer", new {id = "addressId"})'.replace('addressId', addressId);
                $.get(url, function (data) {
                    $('#address-form-container').html(data);
                    $('#address-form-container').show();
                });
                $('.add-address-form').hide();
            });
            $('.add-address-button').click(function () {
                var customerId = $(this).data('id'); // Get the customer ID from the data attribute
                var url = '@Url.Action("AddNewAddress", "Customer")' + '?customerId=' + customerId;

                $.get(url, function (data) {
                    $('#address-form-container').html(data);
                    $('#address-form-container').show();
                });

                // $('.add-address-form').hide();
            });
            $('.delete-address-button').click(function () {
                var addressId = $(this).data('id');
                var url = '@Url.Action("DeleteAddress", "Customer",new {id = "addressId"})'.replace('addressId', addressId);

                $.get(url, function (data) {
                    $('#address-form-container').html(data);
                    $('#address-form-container').show();
                });
            });

            $(document).on('click', '#close-form-button', function () {
                $('#address-form-container').hide();
            });

        });


        const submit = document.getElementById("submitButton");
        const postcode = document.getElementById("postCodeTextBox");

        function changeValidationUpToType() {
            var city = document.getElementById("cityTextBox");
            var chosenType = parseInt(document.getElementById("typeId").value);
            var country = document.getElementById("countryTextBox");
            if (chosenType == 2) {
                country.value = "United Kingdoms"
                city.value = "Leicester"
                city.readOnly = true;

            } else {
                country.value = "";
                city.value = "";
                city.readOnly = false;
                postcode.oninput = null;
                ChangeValidationToBilling();
            }
        }

        function ChangeValidationToBilling() {
            var textboxMessage = document.getElementById("displayError");
            textboxMessage.innerHTML = "";
        }

        function CheckRegex(enteredPostcode) {
            var regEx = /^[a-z]{1,2}\d[a-z\d]?\s*\d[a-z]{2}$/i;
            var isValid = regEx.test(enteredPostcode);

            return isValid;

        }
        function CheckIfCanBeDelivered(enteredPostcode) {
            var upperPostcode = enteredPostcode.toUpperCase();
            var isLongerThanSixSigns = upperPostcode.length > 6;
            var firstOutcode = isLongerThanSixSigns ? "LE1 " : "LE1";
            const listOfOutcodesForDelivery = [firstOutcode, "LE2", "LE3", "LE4"];
            var outCode = upperPostcode.substring(0, 4);
            var canWeDeliver = listOfOutcodesForDelivery.some((x) =>
                outCode.includes(x));
            return canWeDeliver;
        }

        function CheckPostcode() {
            var chosenType = parseInt(document.getElementById("typeId").value);
            if (chosenType == 2) {
                var enteredPostcode = document.getElementById("postCodeTextBox").value;
                var isValid = CheckRegex(enteredPostcode);
                var textboxMessage = document.getElementById("displayError");
                if (isValid == true) {
                    var canWeDeliver = CheckIfCanBeDelivered(enteredPostcode);
                    if (canWeDeliver == true) {
                        textboxMessage.style.color = "green";
                        textboxMessage.innerHTML = '<i class="fa-solid fa-circle-check" style="color:green"></i> We can deliver to you';
                        submit.disabled = false;
                    } else {
                        textboxMessage.style.color = "red";
                        textboxMessage.innerHTML = '<i class="fa-solid fa-circle-exclamation"></i> Sorry, we cannot deliver to this postcode';
                        submit.disabled = true;
                    }
                } else {
                    textboxMessage.innerHTML = '<i class="fa-solid fa-circle-exclamation"></i> Sorry, the postcode is inccorrect';
                    textboxMessage.style.color = "red";
                    submit.disabled = true;
                }
            } else {
                CheckField('postcode')
            }
        }

    </script>
}