@model CafeMVC.Application.ViewModels.Orders.OrderForCreationVm
<head>
    <link rel="stylesheet" href="~/css/OrderStyleSheet.css" />
</head>
@{
    bool condition = Model.Payment.PaymentTypeId != 1; // paymentTypes: id 1 == card id 2 == cash id 3 == paypal
    int deliveryAddressIndex = condition ? 0 : 1;
    @if (Model.IsCollection == false)
    {
        Model.Addresses[deliveryAddressIndex].City = "Leicester";
        Model.Addresses[deliveryAddressIndex].Country = "United Kingdoms";
        Model.Addresses[deliveryAddressIndex].AddressTypeId = 2;
    }
}
@using (Html.BeginForm("Checkout", "Order", FormMethod.Get, new { @id = "CustomerInfoForm" }))
{
    <div id="customerContactInfo">

        <div class="header">
            <h2>Personal Details</h2>
            <hr class="overLine">
        </div>

        <div class="innerGrid">
            <div class="columnOne">
                <div id="firstName">
                    <h5>@Html.LabelFor(m => m.Customer.FirstName)</h5>
                    <h6>@Html.TextBoxFor(m => m.Customer.FirstName, new {@class = "textBox textbox2", @required = "required", @maxlength =50, @onchange="CheckField('firstName')"})</h6>
                    <span></span>
                </div>
                <div id="lastName">
                    <h5>@Html.LabelFor(m => m.Customer.Surname)</h5>
                    <h6>@Html.TextBoxFor(m => m.Customer.Surname, new {@class = "textBox textbox2", @required = "required", @maxlength =50, @onchange="CheckField('lastName')"})</h6>
                    <span></span>
                </div>
            </div>

            <div class="columnTwo">
                <h5>E-mail</h5>
                @Html.HiddenFor(m => m.ContactDetails[0].Id)
                @Html.HiddenFor(m => m.ContactDetails[0].ContactDetailTypeId, new {@id="emailTypeId"})
                <h6>@Html.TextBoxFor(m => m.ContactDetails[0].ContactDetailInformation, new {@class = "textBox textbox2", @required = "required", @id="emailBox"})</h6>
                <span id="emailAlert"></span>
                <h5>Contact phone</h5>
                @Html.HiddenFor(m => m.ContactDetails[1].Id)
                @Html.HiddenFor(m => m.ContactDetails[1].ContactDetailTypeId, new {@id="mobileTypeId"})
                <h6>@Html.TextBoxFor(m => m.ContactDetails[1].ContactDetailInformation, new {@class = "textBox textbox2", @required = "required", @id="phoneBox"})</h6>
                <span id="phoneAlert"></span>
            </div>
        </div>
    </div>
    @Html.HiddenFor(m => m.Payment.PaymentTypeId, new{@value= Model.Payment.PaymentTypeId})
    @Html.HiddenFor(m => m.Payment.PaymentType.Name, new{@value= Model.Payment.PaymentType.Name})
    @Html.HiddenFor(m => m.IsCollection, new{@value= Model.IsCollection})
    @if (Model.Payment.PaymentTypeId == 1)
    {

        <div id="billingAddress">
            <div class="header">
                <h2>Billing Address</h2>
                <hr class="overLine">
                @Html.HiddenFor(m => m.Addresses[0].AddressTypeId, new{@id= "billingTypeId"})
            </div>

            <div class="innerGrid">
                <div class="columnOne">
                    <div class="textbox" id="streetBil">
                        <h5>@Html.LabelFor(m => m.Addresses[0].Street, new {@value="Street"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[0].Street, new { @class = "textBox textbox2", @id = "streetB", @required = "required", @onchange="CheckField('streetBil')"})
                        </h6>
                        <span></span>
                    </div>
                    <div class="textbox" id="buildingNumberBil">
                        <h5>@Html.LabelFor(m => m.Addresses[0].BuildingNumber, new {@value="Building Number"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[0].BuildingNumber, new { @class = "textBox textbox2",  @id = "buildingNumberB", @required = "required", @onchange="CheckNumber('buildingNumberBil')"})
                        </h6>
                        <span></span>
                    </div>
                    <div class="textbox" id="flatNumberBil">
                        <h5>@Html.LabelFor(m => m.Addresses[0].FlatNumber, new {@value="Flat Number"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[0].FlatNumber, new { @class = "textBox textbox2", @id = "flatNumberB", @onchange="CheckNumber('flatNumberBil')"})
                        </h6>
                        <span></span>
                    </div>
                </div>

                <div class="columnTwo">
                    <div class="textbox" id="postCodeB">

                        <h5>@Html.LabelFor(m => m.Addresses[0].ZipCode, new {@value="Post Code"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[0].ZipCode, new { @class = "textBox textbox2", @id = "zipCodeB", @required = "required", @onchange="CheckField('postCodeB')"})
                        </h6>
                        <span></span>
                    </div>
                    <div class="textbox" id="cityBil">
                        <h5>@Html.LabelFor(m => m.Addresses[0].City, new {@value="City"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[0].City, new { @class = "textBox textbox2", @id = "cityB", @required = "required", @onchange="CheckField('cityBil')"})
                        </h6>
                        <span></span>
                    </div>
                    <div class="textbox" id="countryBil">
                        <h5>@Html.LabelFor(m => m.Addresses[0].Country, new {@value="Country"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[0].Country, new { @class = "textBox textbox2", @id = "countryB", @required = "required", @onchange="CheckField('countryBil')"})
                        </h6>
                        <span></span>
                    </div>
                </div>
            </div>
        </div>
        @if (Model.IsCollection == false)
        {

            <div id="deliveryCheckBox">
                <p><b>Delivery Address <label><input type="checkbox" value="" id="check-address" onclick="FillShippingAddress()">Same as billing?</label></b></p>
            </div>
        }
    }
    @if (Model.IsCollection == false)
    {
        <div class="header">
            <h2>Delivery Address</h2>
            <hr class="overline">
            @Html.HiddenFor(m => m.Addresses[deliveryAddressIndex].AddressTypeId, new{ @id="deliveryTypeId" })

        </div>

        <div id="deliveryAddress">

            <div class="innerGrid">
                <div class="columnOne">
                  
                    <div class="textbox" id="streetDel">
                        <h5>@Html.LabelFor(m => m.Addresses[deliveryAddressIndex].Street, new {@value="Street"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[deliveryAddressIndex].Street, new { @class = "textBox textbox2", @id = "streetD", @onchange="CheckField('streetDel')"})
                        </h6>
                        <span></span>
                    </div>
                    <div class="textbox" id="buildingNumberDel">
                        <h5>@Html.LabelFor(m => m.Addresses[deliveryAddressIndex].BuildingNumber, new {@value="Buildin Number"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[deliveryAddressIndex].BuildingNumber, new { @class = "textBox textbox2", @required = "required", @id = "buildingNumberD", @onchange="CheckNumber('buildingNumberDel')"})
                        </h6>
                        <span></span>
                    </div>
                    <div class="textbox" id="flatNumberDel">
                        <h5>@Html.LabelFor(m => m.Addresses[deliveryAddressIndex].FlatNumber, new {@value="Flat Number"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[deliveryAddressIndex].FlatNumber, new { @class = "textBox textbox2", @id = "flatNumberD", @required = "required", @onchange="CheckNumber('flatNumberDel')"})
                        </h6>
                        <span></span>
                    </div>
                </div>

                <div class="columnTwo" id="columnTwoDelivery">
                    <div class="textbox">
                        <h5>@Html.LabelFor(m => m.Addresses[deliveryAddressIndex].ZipCode, new {@value="Post Code"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[deliveryAddressIndex].ZipCode, new { @id="zipCodeD",@class = "textBox textbox2",@required = "required", @readonly= "readonly", @value=Model.Addresses[deliveryAddressIndex].ZipCode})
                        </h6>
                        <span><i class="fa-solid fa-circle-check" style="color:green"></i></span>
                    </div>
                    <div class="textbox">
                        <h5>@Html.LabelFor(m => m.Addresses[deliveryAddressIndex].City, new {@value="City"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[deliveryAddressIndex].City, new {@id= "cityD", @class = "textBox textbox2", @readonly= "readonly", @Value="Leicester"})
                        </h6>
                        <span><i class="fa-solid fa-circle-check" style="color:green"></i></span>
                    </div>
                    <div class="textbox">
                        <h5>@Html.LabelFor(m => m.Addresses[deliveryAddressIndex].Country, new {@value="Country"})</h5>
                        <h6>
                            @Html.TextBoxFor(m => m.Addresses[deliveryAddressIndex].Country, new {@id="countryD", @class = "textBox textbox2", @readonly= "readonly", @Value="United Kingdoms"})
                        </h6>
                        <span><i class="fa-solid fa-circle-check" style="color:green"></i></span>
                    </div>
                </div>
            </div>
        </div>
    }

    <div id="submit">
        <button type="submit" class="btn btn-success" value="Submit" name="Btn" role="button" id="submitButton">Submit</button>
        <button type="submit" class="btn btn-danger" name="Btn" value="Cancel">Cancel</button>
    </div>

}
@section Scripts{
    <script src="~/js/CustomerInfo.js"></script>
    <script type="text/javascript">
       
        var email = document.getElementById("emailBox");
        email.addEventListener("change", ValidateEmail);

        function ValidateEmail() {
            var inputText = document.getElementById("emailBox");
            var textboxMessage = document.getElementById("emailAlert");
            var submit = document.getElementById("submitButton");

            var mailformat = /^\w+([\.-]?\w+)*@@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
            if (inputText.value.match(mailformat)) {
                textboxMessage.style.color = "green";
                textboxMessage.innerHTML = '<i class="fa-solid fa-circle-check" style="color:green"></i>';
                submit.disabled = false;

            } else {
                textboxMessage.style.color = "red";
                textboxMessage.innerHTML = '<i class="fa-solid fa-circle-exclamation"></i> Enter correct e-mail address';
                submit.disabled = true;

            }

        }
    </script>
}
