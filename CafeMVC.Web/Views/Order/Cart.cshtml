@model CafeMVC.Application.ViewModels.Orders.OrderForCreationVm
@using Microsoft.AspNetCore.Http;
@using CafeMVC.Application.Helpers;
@{
    string title = "Your Cart";
    string ingredientToDisplay, dietInfoToDisplay;
    var listOfPaymentTypesForDropdown = new List<SelectListItem>();
    for (int i = 0; i < Model.Payment.AllPaymentTypes.Count; i++)
    {
        listOfPaymentTypesForDropdown.Add(
            new SelectListItem { Value = Model.Payment.AllPaymentTypes[i].Id.ToString(), Text = Model.Payment.AllPaymentTypes[i].Name }
        );
    }
}
<head>
    <link rel="stylesheet" href="~/css/OrderStyleSheet.css" />

</head>
<h1>@title</h1>
<div class="wrapper">
    @if (Model.Products.Count > 0)
    {
        <div class="productBar">
            @for (int i = 0; i < Model.Products.Count; i++)
            {
                <div class="product">

                    <div class="picture">
                        <div class="pictureFrame">
                            <div class="displayPicture" style=" background-image: url('@Model.Products[i].ProductVm.BasePath');"></div>
                        </div>
                    </div>
                    <div class="description">
                        <div>
                            <h3>@Model.Products[i].ProductVm.Name</h3>
                            <hr>
                        </div>

                        <div>@Model.Products[i].ProductVm.Description</div>
                        <hr>
                        <div>
                            Igredients: &emsp;
                            @for (int j = 0; j < Model.Products[i].ProductVm.Ingredients.Count; j++)
                            {
                                if (j != (Model.Products[i].ProductVm.Ingredients.Count - 1))
                                {
                                    ingredientToDisplay = Model.Products[i].ProductVm.Ingredients[j].Name + ", ";
                                    @ingredientToDisplay
                                }
                                else
                                {
                                    @Model.Products[i].ProductVm.Ingredients[j].Name
                                }
                            }
                            <hr>
                        </div>
                        @if (Model.Products[i].ProductVm.Allergens != null)
                        {
                            <div>
                                Allergens: &emsp;
                                @for (int j = 0; j < Model.Products[i].ProductVm.Allergens.Count; j++)
                                {
                                    if (j != (Model.Products[i].ProductVm.Allergens.Count - 1))
                                    {
                                        dietInfoToDisplay = Model.Products[i].ProductVm.Allergens[j].Name + ", ";
                                        @dietInfoToDisplay
                                    }
                                    else
                                    {
                                        @Model.Products[i].ProductVm.Allergens[j].Name
                                    }
                                }
                                <hr>
                            </div>
                        }
                        @if (Model.Products[i].ProductVm.DietInformations != null)
                        {
                            <div>
                                Product is: &emsp;
                                @for (int j = 0; j < Model.Products[i].ProductVm.DietInformations.Count; j++)
                                {
                                    if (j != (Model.Products[i].ProductVm.DietInformations.Count - 1))
                                    {
                                        dietInfoToDisplay = Model.Products[i].ProductVm.DietInformations[j].Name + ", ";
                                        @dietInfoToDisplay
                                    }
                                    else
                                    {
                                        @Model.Products[i].ProductVm.DietInformations[j].Name
                                    }
                                }
                            </div>
                        }
                    </div>
                    <div class="functions">
                        @using (Html.BeginForm("UpdateCartProduct", "Order", FormMethod.Post))
                        {
                            <input type="hidden" name="productId" value="@Model.Products[i].ProductVm.Id">

                            <div><h3 id="price">&#163;@Model.Products[i].ProductVm.Price</h3></div>
                            <div><button type="button" class="button button5 btn-plus" data-id="textbox{@Model.Products[i].ProductVm.Id}" id="@Model.Products[i].ProductVm.Id" onclick="functionUp('textbox{@Model.Products[i].ProductVm.Id}')">+</button></div>

                            <div><input type="text" min="1" name="quantity" id="textbox{@Model.Products[i].ProductVm.Id}" class="counter textBox" value="@Model.Products[i].Quantity" /></div>
                            <div><button type="button" class="button button5 btn-minus" onclick="functionDown('textbox{@Model.Products[i].ProductVm.Id}')">-</button></div>

                            <br>
                            <div> <button type="submit" id="UpdateCart" class="textBox">Update</button></div>
                        }
                        @using (Html.BeginForm("RemoveProductFromCart", "Order"))
                        {

                            <div>
                                <a asp-action="RemoveProductFromCart" asp-controller="Order" asp-route-id="@Model.Products[i].ProductVm.Id" id="deleteButton">

                                    <i class="fa-solid fa-trash-can"> </i>
                                </a>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
        <div class="checkoutBar">
            <h4>Your Cart ( @Context.Session.GetInt32("qty") products ):</h4>
            <h4>Total:  &#163; @Context.Session.GetString("total")</h4>
            <br />
            @using (Html.BeginForm("CustomerInfo", "Order", FormMethod.Get))
            {
                <input type="radio" id="collection" name="isCollection" value="true" onclick="ShowHideDiv()"/>
                <label for="collection">Collection</label>
                <br>
                <input type="radio" id="delivery" name="isCollection" value="false" onclick="ShowHideDiv()"/>
                <label for="delivery">Delivery</label>
                <br>
                <div id="dvtext" style="display: none">
                    Check your postcode if we can deliver.
                    <input type="text" id="txtBox" />
                    <button type="button" onclick="CheckPostcode">Check</button>
                </div>
                <br />
                <h4>Payment Method</h4>
                @Html.DropDownList("paymentTypeId", listOfPaymentTypesForDropdown, new{@class="otherInput", @id="paymentTypeDropdown"})
                <input type="hidden" id="paymentTypeName" name="paymentName" />
                <br />
                <br />
                <button type="submit" class="btn btn-success" onclick="assignPaymentName()" value="Submit" name="Btn" role="button">Proceed</button>
            }
        </div>
    }
    else
    {
        <h2>Your cart is empty</h2>
    }
</div>

@section Scripts{
    <script type="text/javascript">
        function functionUp(id) {
            var value = parseInt(document.getElementById(id).value, 10);
            value = isNaN(value) ? 0 : value;
            value++;
            document.getElementById(id).value = value;
        }
        function functionDown(id) {
            var value = parseInt(document.getElementById(id).value, 10);
            value = isNaN(value) ? 0 : value;
            value--;
            if (value >= 0) {

                document.getElementById(id).value = value;
            }
        }
        document.getElementById('paymentTypeDropdown').onchange = function (e) {
            var value = parseInt(e.value.target);
            alert(value);

        };
            function CheckPostcode(){
                var enteredPostcode = document.getElementById("txtBox");
                console.log(enteredPostcode.value);
            }

        function assignPaymentName() {
            var paymentName = document.getElementById('paymentTypeName');
            var dropdownList = document.getElementById('paymentTypeDropdown');
            paymentName.value = dropdownList.options[dropdownList.selectedIndex].text;
        }

        function ShowHideDiv() {
            var delivery = document.getElementById("delivery");
            var dvtext = document.getElementById("dvtext");
            dvtext.style.display = delivery.checked ? "block" : "none";
        }
    </script>
}